题目:输入一个链表，反转链表后，输出链表的所有元素
思路:注意反转后的后续节点的保存。
例如:1->2->3->4->5 链表结尾的next都为null
变成1<-2<-3<-4<-5
但是注意1<-2 3->4->5后会找不到3，所以要注意对3的保存以便找到后续还没有反转的链表。
代码:
首先定义一个reversehead = null，这是反转后的起点，为了避免链表为空，因为最后return的是reversehead,如果链表为空返回的肯定是null
定义一个prenode = head;这是不断往后的节点，此节点反转指向前面的节点
pre = null;prenode前面的那个节点，初始为null，因为最后的节点都会指向null
/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode ReverseList(ListNode head) {
		//注意保存反转断裂后的下一个节点
        ListNode reversehead = null;//反转后的起点
        ListNode prenode = head;
        ListNode pre = null;
        while(prenode != null){
            ListNode prenext = prenode.next;//用于保存断裂后的原链表后续的节点
            if(prenext == null){
                reversehead = prenode;//reversehead为反转后的起点
            }
            
            prenode.next = pre;
            pre = prenode;
            prenode = prenext;
        }
        return reversehead;
    }
}






