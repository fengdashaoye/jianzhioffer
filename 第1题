题目:在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。
请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。

思路:从最后一行开始比较，比较第一个数是否比target小，小的话用二分查找，否则continue，开始比较上一行
注意一点，之前一直报错，就是数组越界，因为在13行(从本文件第1行开始数)，之前没有加这一句if(array[i].length > 0)
因此在测试用例16,[[]]中报错，因为没有array[i][0]这个元素。
public class Solution {
    public boolean Find(int target, int [][] array) {
        if(array == null){
            return false;
        }
		for(int i = array.length-1; i >= 0; i--){
            if(array[i].length > 0){
                if(array[i][0] > target){
                	continue;
            	}else{
                	if(binarySearch(array[i], target)){
                    	return true;
                	}  
            	}
            }
            
        }
        return false;
    }
    public boolean binarySearch(int a[], int key){//注意除法中5/2=2
        int low = 0;
        int high = a.length - 1;
        while(low <= high){
            int mid = (low + high) / 2;
            int midContent = a[mid];
            if(midContent > key){
                high = mid - 1;
            }else if (midContent < key){
                low = mid + 1;
            }else{
                return true;
            }
        }
        return false;
    }
}
